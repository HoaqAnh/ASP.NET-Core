// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TranPhamHoangAnh_2280600123.Data;

#nullable disable

namespace TranPhamHoangAnh_2280600123.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.ActivityProgress", b =>
                {
                    b.Property<int>("ActivityProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ActivityProgressId"));

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ListeningId")
                        .HasColumnType("int");

                    b.Property<int?>("ReadingId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int?>("WritingId")
                        .HasColumnType("int");

                    b.HasKey("ActivityProgressId");

                    b.HasIndex("ListeningId");

                    b.HasIndex("ReadingId");

                    b.HasIndex("UserId");

                    b.HasIndex("WritingId");

                    b.ToTable("ActivityProgresses");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.HistoryQuestion", b =>
                {
                    b.Property<int>("HistoryQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("HistoryQuestionId"));

                    b.Property<int>("HistoryQuizId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("UserAnswer")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("HistoryQuestionId");

                    b.HasIndex("HistoryQuizId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoryQuestions");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.HistoryQuiz", b =>
                {
                    b.Property<int>("HistoryQuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("HistoryQuizId"));

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("HistoryQuizId");

                    b.HasIndex("QuizId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoryQuizzes");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LessonId"));

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("LessonId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Listening", b =>
                {
                    b.Property<int>("ListeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ListeningId"));

                    b.Property<string>("AudioUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("ListeningId");

                    b.HasIndex("LessonId");

                    b.ToTable("Listenings");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CorrectAnswer")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("OptionA")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OptionB")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OptionC")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OptionD")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.HasIndex("QuizId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("QuizId"));

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("QuizId");

                    b.HasIndex("LessonId");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Reading", b =>
                {
                    b.Property<int>("ReadingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ReadingId"));

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("ReadingContent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("ReadingId");

                    b.HasIndex("LessonId");

                    b.ToTable("Readings");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OtpCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("OtpExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Writing", b =>
                {
                    b.Property<int>("WritingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WritingId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("WritingId");

                    b.HasIndex("LessonId");

                    b.ToTable("Writings");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.ActivityProgress", b =>
                {
                    b.HasOne("TranPhamHoangAnh_2280600123.Models.Listening", "Listening")
                        .WithMany()
                        .HasForeignKey("ListeningId");

                    b.HasOne("TranPhamHoangAnh_2280600123.Models.Reading", "Reading")
                        .WithMany()
                        .HasForeignKey("ReadingId");

                    b.HasOne("TranPhamHoangAnh_2280600123.Models.User", "User")
                        .WithMany("ActivityProgresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TranPhamHoangAnh_2280600123.Models.Writing", "Writing")
                        .WithMany()
                        .HasForeignKey("WritingId");

                    b.Navigation("Listening");

                    b.Navigation("Reading");

                    b.Navigation("User");

                    b.Navigation("Writing");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.HistoryQuestion", b =>
                {
                    b.HasOne("TranPhamHoangAnh_2280600123.Models.HistoryQuiz", "HistoryQuiz")
                        .WithMany("HistoryQuestions")
                        .HasForeignKey("HistoryQuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TranPhamHoangAnh_2280600123.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TranPhamHoangAnh_2280600123.Models.User", "User")
                        .WithMany("HistoryQuestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HistoryQuiz");

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.HistoryQuiz", b =>
                {
                    b.HasOne("TranPhamHoangAnh_2280600123.Models.Quiz", "Quiz")
                        .WithMany("HistoryQuizzes")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TranPhamHoangAnh_2280600123.Models.User", "User")
                        .WithMany("HistoryQuizzes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Listening", b =>
                {
                    b.HasOne("TranPhamHoangAnh_2280600123.Models.Lesson", "Lesson")
                        .WithMany("Listenings")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Question", b =>
                {
                    b.HasOne("TranPhamHoangAnh_2280600123.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Quiz", b =>
                {
                    b.HasOne("TranPhamHoangAnh_2280600123.Models.Lesson", "Lesson")
                        .WithMany("Quizzes")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Reading", b =>
                {
                    b.HasOne("TranPhamHoangAnh_2280600123.Models.Lesson", "Lesson")
                        .WithMany("Readings")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Writing", b =>
                {
                    b.HasOne("TranPhamHoangAnh_2280600123.Models.Lesson", "Lesson")
                        .WithMany("Writings")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.HistoryQuiz", b =>
                {
                    b.Navigation("HistoryQuestions");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Lesson", b =>
                {
                    b.Navigation("Listenings");

                    b.Navigation("Quizzes");

                    b.Navigation("Readings");

                    b.Navigation("Writings");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.Quiz", b =>
                {
                    b.Navigation("HistoryQuizzes");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("TranPhamHoangAnh_2280600123.Models.User", b =>
                {
                    b.Navigation("ActivityProgresses");

                    b.Navigation("HistoryQuestions");

                    b.Navigation("HistoryQuizzes");
                });
#pragma warning restore 612, 618
        }
    }
}
